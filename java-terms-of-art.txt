 Anatomy of a Java Program:

Defintions:
3. Method - a method is a function that is apart of class
class Main {
    void main () {
    }
}
2. Class - A container for one or more related functions; helps organize codes.

class Main {
    void main () {
    }
}

* the functions between a  class is a method*

1. Function - A function is the smallest block of code in java that can perform a specific task; n java.
      void main () {
        }

*main is the entry point to java programs*
Whenever a java program is run the main function is called and the code inside gets executed
*a funciton should never be alone and should always belong to a class*

All classes and methods should have a access modifier- a special keyword that determines if other classes and methods
can access these classes and methods  ex( public & private)
Ex:
 public class Main {
    public void main() {

    }
 }

 When naming classes we use the PascalNamingConvention
 When naming methods we use the camelNamingConvention

Field -
Variable -

How Java Gets Executed:

There are two steps that contribute to executable code;
1. Compilation - InteliJ uses the java compilers; to compile code into a different format: (java byte code)
2. Execution

the java byte code is run independant if you have a JRE (Java Runtime Enviroment)

JRE - has a software component known as JVM (Java Virtual Machine) takes java byte code to the native code of the
underlying operating system.

Compiled Machine language - Directly translate the program without any assistance. This language is directly converted
into machine code; which is usally faster and more efficient than interpreted languages Ex: C, C++, Rust

Interpreted Language - Not directly translated but instead used a different program known as
a "interpreter", to read and execute code. They run through lines of code 1 by 1 ; and allow users to edit code without
having to rewrite everything Ex: JavaScript, Python, Ruby, PHP
*Typically more flexible but slower*


Data Types:
